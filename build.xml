<?xml version="1.0" encoding="UTF-8"?>
<!--
build.xml - build the translation circle app 

Copyright Â© 2015-2016, Translation Circle, Inc., All Right Reserved.
-->

<project name="loctool" default="test">
	<!-- =================================================================== -->
	<!-- properties                                                          -->
	<!-- =================================================================== -->

	<!-- Give user a chance to override properties without editing this file -->
	<!-- (and without typing -D each time it compiles it)                    -->
	<property file="build.properties"/>
	<property file="version.properties"/>

	<!-- Properties that can be overridden -->
	<!-- directories -->
	<property name="build.base"						value="${basedir}"/>
	<property name="build.lib"						value="${build.base}/lib"/>
	<property name="build.test"						value="${build.base}/test"/>
	<property name="build.jsdoc"                    value="${build.base}/jsdoc"/>

	<target name="clean" description="Remove all generated files to start from scratch">
		<delete dir="${build.jsdoc}"/>
	</target>

	<target name="prepare" description="Prepare all directories that are needed before the project can be built">
	</target>

	<target name="testjsdoc" description="test whether or not the jsdocs need to be rebuilt">
		<uptodate
                property="jsdoc.not.needed"
                targetfile="${build.jsdoc}/index.html">
			<srcfiles dir="${build.lib}" includes="**/*.js"/>
		</uptodate>
	</target>

	<target name="doc"
            depends="prepare,testjsdoc"
            description="creates jsdoc for all local javascript files in this project"
            unless="jsdoc.not.needed">
		<delete dir="${build.jsdoc}"/>
		<mkdir dir="${build.jsdoc}"/>
		<echo>Executing jsdoc ... </echo>
		<java dir="${build.base}" jar="${JSDOCDIR}/jsrun.jar" fork="true">
			<jvmarg value="-Djsdoc.dir=${JSDOCDIR}"/>
			<jvmarg value="-Djsdoc.template.dir=${JSDOCDIR}/templates/jsdoc"/>
			<jvmarg value="-Xmx1024m"/>
			<jvmarg value="-XX:MaxPermSize=96m"/>
			<arg value="${JSDOCDIR}/app/run.js"/>
			<arg value="--directory=${build.jsdoc}"/>
			<arg value="--recurse=100"/>
			<arg value="--encoding=utf-8"/>
			<arg value="${build.lib}"/>
		</java>
	</target>

	<target name="debug.loctool" description="Debug the whole loc tool">
		<sequential>
			<exec osfamily="unix" executable="${node}/bin/node" dir="../ht-androidapp" failifexecutionfails="true" failonerror="true">
				<env key="PATH" path="${node}/bin:${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="--inspect"/>
				<arg line="--debug-brk"/>
				<arg line="../loctool/loctool.js"/>
			</exec>
			<exec osfamily="windows" executable="${node}/bin/node.exe" dir="../ht-androidapp" failifexecutionfails="true"  failonerror="true">
				<env key="PATH" path="${node}/bin;${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="--inspect"/>
				<arg line="--debug-brk"/>
				<arg line="../loctool/loctool.js"/>
			</exec>
		</sequential>
	</target>

	<macrodef name="run">
		<attribute name="executable"/>
		<attribute name="script"/>
		<attribute name="args"/>
		<attribute name="dir"/>
		<sequential>
			<exec osfamily="unix" executable="@{executable}" dir="@{dir}" failifexecutionfails="true" failonerror="true">
				<env key="PATH" path="${node}/bin:${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="@{args}"/>
				<arg line="@{script}"/>
			</exec>
			<exec osfamily="windows" executable="@{executable}.exe" dir="@{dir}" failifexecutionfails="true"  failonerror="true">
				<env key="PATH" path="${node}/bin;${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="@{args}"/>
				<arg line="@{script}"/>
			</exec>
		</sequential>
	</macrodef>

	<macrodef name="debug">
		<attribute name="script"/>
		<attribute name="dir"/>
		<sequential>
			<exec osfamily="unix" executable="${node}/bin/node" dir="@{dir}" failifexecutionfails="true" failonerror="true">
				<env key="PATH" path="${node}/bin:${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="--inspect"/>
				<arg line="--debug-brk"/>
				<arg line="${nodeunit}/bin/nodeunit"/>
				<arg line="@{script}"/>
			</exec>
			<exec osfamily="windows" executable="${node}/bin/node.exe" dir="@{dir}" failifexecutionfails="true"  failonerror="true">
				<env key="PATH" path="${node}/bin;${env.PATH}"/>
				<env key="LOG4JS_CONFIG" value="${build.test}/log4js.json"/>
				<arg line="--inspect"/>
				<arg line="--debug-brk"/>
				<arg line="${nodeunit}/bin/nodeunit"/>
				<arg line="@{script}"/>
			</exec>
		</sequential>
	</macrodef>

	<target name="test.resourcestring" description="Run only the resource string tests">
		<run script="${build.test}/testResourceString.js" executable="${nodeunit}/bin/nodeunit" dir="${build.base}" args="" />
	</target>

	<target name="debug.resourcestring" description="Debug only the resource string tests">
		<debug script="${build.test}/testResourceString.js" dir="${build.test}"/>
	</target>

	<target name="test.resourcearray" description="Run only the resource array tests">
		<run script="${build.test}/testResourceArray.js" executable="${nodeunit}/bin/nodeunit" dir="${build.base}" args="" />
	</target>

	<target name="test.resourceplural" description="Run only the plural resource tests">
		<run script="${build.test}/testResourcePlural.js" executable="${nodeunit}/bin/nodeunit" dir="${build.base}" args="" />
	</target>

	<target name="test.translationset" description="Run only the translation set tests">
		<run script="${build.test}/testTranslationSet.js" executable="${nodeunit}/bin/nodeunit" dir="${build.base}" args="" />
	</target>

	<target name="debug.translationset" description="Debug only the translation set tests">
		<debug script="${build.test}/testTranslationSet.js" dir="${build.test}"/>
	</target>

	<target name="test.set" description="Run only the set tests">
		<run script="${build.test}/testSet.js" executable="${nodeunit}/bin/nodeunit" dir="${build.base}" args="" />
	</target>

	<target name="test.javafile" description="Run only the java file tests">
		<run script="${build.test}/testJavaFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.javafile" description="Debug only the java file tests">
		<debug script="${build.test}/testJavaFile.js" dir="${build.test}"/>
	</target>

	<target name="test.dbtranslationset" description="Run only the database translation set tests">
		<run script="${build.test}/testDBTranslationSet.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="test.androidlayoutfile" description="Run only the Android layout file tests">
		<run script="${build.test}/testAndroidLayoutFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.androidlayoutfile" description="Debug only the android layout file tests">
		<debug script="${build.test}/testAndroidLayoutFile.js" dir="${build.test}"/>
	</target>

	<target name="test.androidresourcefile" description="Run only the Android resource file tests">
		<run script="${build.test}/testAndroidResourceFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.androidresourcefile" description="Debug only the android resource file tests">
		<debug script="${build.test}/testAndroidResourceFile.js" dir="${build.test}"/>
	</target>

	<target name="test.xliff" description="Run only the xliff tests">
		<run script="${build.test}/testXliff.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.xliff" description="Debug only the tests for the xliff object">
		<debug script="${build.test}/testXliff.js" dir="${build.test}"/>
	</target>

	<target name="test.localrepository" description="Run only the tests for the local repository">
		<run script="${build.test}/testLocalRepository.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="test.utils" description="Run only the tests for the utils">
		<run script="${build.test}/testUtils.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="test.javascriptfile" description="Run only the tests for the JavaScript file object">
		<run script="${build.test}/testJavaScriptFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.javascriptfile" description="Debug only the tests for the JavaScript file object">
		<debug script="${build.test}/testJavaScriptFile.js" dir="${build.test}"/>
	</target>

	<target name="test.javascriptfiletype" description="Run only the tests for the JavaScript file type">
		<run script="${build.test}/testJavaScriptFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.javascriptfiletype" description="Debug only the tests for the JavaScript file type">
		<debug script="${build.test}/testJavaScriptFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.htmltemplatefile" description="Run only the tests for the HTML templates">
		<run script="${build.test}/testHTMLTemplateFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.htmltemplatefile" description="Debug only the tests for the HTML templates">
		<debug script="${build.test}/testHTMLTemplateFile.js" dir="${build.test}"/>
	</target>

	<target name="test.htmltemplatefiletype" description="Run only the tests for the HTML template file type">
		<run script="${build.test}/testHTMLTemplateFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.htmltemplatefiletype" description="Debug only the tests for the HTML template file type">
		<debug script="${build.test}/testHTMLTemplateFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.objectivecfile" description="Run only the tests for the Objective C file">
		<run script="${build.test}/testObjectiveCFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.objectivecfile" description="Debug only the tests for the Objective C file">
		<debug script="${build.test}/testObjectiveCFile.js" dir="${build.test}"/>
	</target>
	
	<target name="test.objectivecfiletype" description="Run only the tests for the Objective C file type">
		<run script="${build.test}/testObjectiveCFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.objectivecfiletype" description="Debug only the tests for the Objective C file type">
		<debug script="${build.test}/testObjectiveCFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.iosstringsfile" description="Run only the tests for the strings resource file">
		<run script="${build.test}/testIosStringsFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.iosstringsfile" description="Debug only the tests for the strings resource file">
		<debug script="${build.test}/testIosStringsFile.js" dir="${build.test}"/>
	</target>

	<target name="test.iosstringsfiletype" description="Run only the tests for the strings resource file type">
		<run script="${build.test}/testIosStringsFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.iosstringsfiletype" description="Debug only the tests for the strings resource file type">
		<debug script="${build.test}/testIosStringsFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.javascriptresourcefile" description="Run only the tests for the JavaScript resource file object">
		<run script="${build.test}/testJavaScriptResourceFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.javascriptresourcefile" description="Debug only the tests for the JavaScript resource file object">
		<debug script="${build.test}/testJavaScriptResourceFile.js" dir="${build.test}"/>
	</target>

	<target name="test.javascriptresourcefiletype" description="Run only the tests for the JavaScript resource file type object">
		<run script="${build.test}/testJavaScriptResourceFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.javascriptresourcefiletype" description="Debug only the tests for the JavaScript resource file type object">
		<debug script="${build.test}/testJavaScriptResourceFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.yamlfile" description="Run only the tests for the Yaml file object">
		<run script="${build.test}/testYamlFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.yamlfile" description="Debug only the tests for the Yaml file object">
		<debug script="${build.test}/testYamlFile.js" dir="${build.test}"/>
	</target>

	<target name="test.yamlfiletype" description="Run only the tests for the Yaml file type object">
		<run script="${build.test}/testYamlFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.yamlfiletype" description="Debug only the tests for the Yaml file type object">
		<debug script="${build.test}/testYamlFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.yamlresourcefile" description="Run only the tests for the Yaml resource file object">
		<run script="${build.test}/testYamlResourceFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.yamlresourcefile" description="Debug only the tests for the Yaml resource file object">
		<debug script="${build.test}/testYamlResourceFile.js" dir="${build.test}"/>
	</target>

	<target name="test.yamlresourcefiletype" description="Run only the tests for the Yaml resource file type object">
		<run script="${build.test}/testYamlResourceFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.yamlresourcefiletype" description="Debug only the tests for the Yaml resource file type object">
		<debug script="${build.test}/testYamlResourceFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.rubyfile" description="Run only the tests for the Ruby file object">
		<run script="${build.test}/testRubyFile.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.rubyfile" description="Debug only the tests for the Ruby file object">
		<debug script="${build.test}/testRubyFile.js" dir="${build.test}"/>
	</target>

	<target name="test.rubyfiletype" description="Run only the tests for the Ruby file type object">
		<run script="${build.test}/testRubyFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.rubyfiletype" description="Debug only the tests for the Ruby file type object">
		<debug script="${build.test}/testRubyFileType.js" dir="${build.test}"/>
	</target>

	<target name="test.hamlfiletype" description="Run only the tests for the haml file type">
		<run script="${build.test}/testHamlFileType.js" executable="${nodeunit}/bin/nodeunit" dir="${build.test}" args="" />
	</target>

	<target name="debug.hamlfiletype" description="Debug only the tests for the haml file type">
		<debug script="${build.test}/testHamlFileType.js" dir="${build.test}"/>
	</target>

	<target name="test" depends="test.translationset,test.set,test.resourcestring,test.resourcearray,test.resourceplural,test.javafile,test.dbtranslationset,test.androidlayoutfile,test.xliff,test.localrepository,test.utils,test.javascriptfiletype,test.javascriptfile,test.htmltemplatefile,test.htmltemplatefiletype,test.javascriptresourcefile,test.javascriptresourcefiletype,test.objectivecfile,test.objectivecfiletype,test.iosstringsfile,test.iosstringsfiletype,test.rubyfile,test.rubyfiletype,test.yamlfiletype,test.yamlfile,test.hamlfiletype,test.yamlresourcefile,test.yamlresourcefiletype">
	</target>

	<macrodef name="runsql">
		<attribute name="file"/>
		<attribute name="username"/>
		<attribute name="password"/>
		<attribute name="host"/>
		<attribute name="database"/>
		<sequential>
			<exec osfamily="unix" executable="mysql" dir="${build.base}/db" failifexecutionfails="true" failonerror="true" input="@{file}">
				<arg line="-u" />
				<arg line="@{username}" />
				<arg line="@{password}" />
				<arg line="-v" />
				<arg line="--host=@{host}" />
				<arg line="@{database}" />
			</exec>
			<exec osfamily="mac" executable="mysql" dir="${build.base}/db" failifexecutionfails="true" failonerror="true" input="@{username}">
				<arg line="-u" />
				<arg line="@{username}" />
				<arg line="@{password}" />
				<arg line="-v" />
				<arg line="--host=@{host}" />
				<arg line="@{database}" />
			</exec>
			<exec osfamily="windows" executable="mysql.exe" dir="${build.base}/db" failifexecutionfails="true" failonerror="true" input="@{file}">
				<arg line="-u" />
				<arg line="@{username}" />
				<arg line="@{password}" />
				<arg line="-v" />
				<arg line="--host=@{host}" />
				<arg line="@{database}" />
			</exec>
		</sequential>
	</macrodef>

	<target name="createdb" description="Create the data base for the development environment">
		<runsql username="root" password="-p" file="${build.base}/db/createdb.sql" host="localhost" database="" />
	</target>

	<target name="create.schema" description="Create the schema in the data base for the development environment">
		<runsql username="ht" password="--password=dYw@j45XKk#$" file="${build.base}/db/createschema.sql" host="localhost" database="translations" />
	</target>

	<target name="cleardb" description="Initialize the data base for the development environment">
		<runsql username="ht" 
            password="--password=dYw@j45XKk#$" 
            file="${build.base}/db/cleardb.sql"
            host="localhost"
            database="translations"/>
	</target>

</project>
